apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  namespace: tukano
  labels:
    app: postgres
data:
  POSTGRES_DB: "ps_db"
  POSTGRES_USER: "ps_user"
  POSTGRES_PASSWORD: "SecurePassword"
  POSTGRES_HOST: "postgres.tukano.svc.cluster.local"
  POSTGRES_PORT: "5432"

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: tukano
spec:
  ports:
    - port: 5432
      name: postgres
  selector:
    app: postgres

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: tukano
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
        labels:
          app: postgres
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-tukano-db
  namespace: tukano
spec:
  template:
    spec:
      containers:
        - name: create-db
          image: postgres:14
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: postgres-secret
          command:
            - /bin/sh
          args:
            - -c
            - |
              until pg_isready -h "$POSTGRES_HOST" -p "$POSTGRES_PORT"; do
                echo "Waiting for PostgreSQL to be ready..."
                sleep 2
              done
              
              PGPASSWORD=$POSTGRES_PASSWORD psql -h "$POSTGRES_HOST" -U "$POSTGRES_USER" -d postgres <<'EOSQL'
              SELECT 'CREATE DATABASE tukano'
              WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'tukano')\gexec
              EOSQL
              
              echo "Database 'tukano' created or already exists."
      restartPolicy: Never
  backoffLimit: 4