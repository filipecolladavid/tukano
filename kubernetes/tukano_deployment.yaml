apiVersion: v1
kind: Service
metadata:
  name: my-webapp-service
  namespace: tukano
  labels:
    app: my-webapp
spec:
  selector:
    app: my-webapp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  type: LoadBalancer
---

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-webapp-replicaset
  namespace: tukano
  labels:
    app: my-webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-webapp
  template:
    metadata:
      labels:
        app: my-webapp
    spec:
      containers:
        - name: tukano-webapp
          image: fdavidfctnova/tukano-webapp
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-secret
                  key: POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30