config:
  target: "https://tukano-70056-70666-1.azurewebsites.net/rest"
  phases:
    - duration: 60  # Duration of the test in seconds
      arrivalRate: 10  # Requests per second
  defaults:
    headers:
      Content-Type: "application/json"

scenarios:
  - name: "Blob operations"
    flow:
      - post:
          url: "/blobs/{blobId}"
          json: "sample blob data"
          beforeRequest: "generateBlobId"
          qs:
            token: "{{ token }}"
      - get:
          url: "/blobs/{blobId}"
          qs:
            token: "{{ token }}"
      - delete:
          url: "/blobs/{blobId}"
          qs:
            token: "{{ token }}"
      - delete:
          url: "/{userId}/blobs"
          qs:
            token: "{{ token }}"

  - name: "Short operations"
    flow:
      - post:
          url: "/shorts/{userId}"
          qs:
            pwd: "{{ password }}"
          capture:
            - json: "$.shortId"  # Capture the created shortId
              as: "shortId"       # Store as variable "shortId" for later use
      - get:
          url: "/shorts/{{ shortId }}"
      - get:
          url: "/{{ userId }}/shorts"
      - post:
          url: "/{{ shortId }}/{{ userId }}/likes"
          json:
            isLiked: true
          qs:
            pwd: "{{ password }}"
      - get:
          url: "/{{ shortId }}/likes"
      - get:
          url: "/{{ userId }}/feed"
          qs:
            pwd: "{{ password }}"
      - delete:
          url: "/{{ shortId }}"
          qs:
            pwd: "{{ password }}"
      - delete:
          url: "/{{ userId }}/shorts"
          qs:
            pwd: "{{ password }}"
            token: "{{ token }}"

  - name: "User operations"
    flow:
      - post:
          url: "/users"
          json:
            userId: "{{ randomUserId }}"
            password: "{{ password }}"
          capture:
            - json: "$.userId"  # Capture the userId after creation
              as: "userId"       # Store as "userId" variable for later use
      - get:
          url: "/users/{{ userId }}"
          qs:
            pwd: "{{ password }}"
      - put:
          url: "/users/{{ userId }}"
          json:
            newDetails: "some updated details"
          qs:
            pwd: "{{ password }}"
      - delete:
          url: "/users/{{ userId }}"
          qs:
            pwd: "{{ password }}"
      - get:
          url: "/users"
          qs:
            query: "some search pattern"

variables:
  randomUserId:
    - "user123"
    - "user456"
    - "user789"
  password:
    - "testpassword123"
    - "examplePwd"
  token:
    - "sampleToken1"
    - "sampleToken2"

functions:
  generateBlobId:
    function: "uuid.v4"  # Generate a random UUID as blobId
